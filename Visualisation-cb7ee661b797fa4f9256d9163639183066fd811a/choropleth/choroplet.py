#!/usr/bin/env python
# coding: utf-8

# In[1]:


#iimports all the needed libraries first they need to be installed with
#pip install package
import pandas as pd
import geopandas as gpd
import matplotlib.pyplot as plt
from pygeoif import geometry
import geojson
from shapely.geometry import Point
from shapely.geometry.polygon import Polygon
from urllib.request import urlopen
import json
import plotly.express as px
from itertools import chain
from plotly import graph_objects as go


# In[2]:


#import the csv file into the dataset
df = pd.read_csv("accidents.csv")
df_n = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.longitude, df.latitude), crs="EPSG:4326")
#import file that has been generated by us online to transform the polygons of the regions into shapefile
fp = "lad.shp"
map_df = gpd.read_file(fp)
#from this website it is taked the geographic data of the regions of the UK
#this code creates the json file with the data of the regions
with urlopen('https://raw.githubusercontent.com/martinjc/UK-GeoJSON/master/json/administrative/eng/lad.json') as response:
    counties = json.load(response)


# In[3]:


#create one column id to put the corespoding name of regions to accident
df_n['id'] = '0'

# the next part creates the dataset of the geometry coordinates of the regions with columns of their attributes 
result = []
for i in range(0,326):
    lad = counties["features"][i]['properties']['LAD13CD']
    result.append(lad)
map_df["LAD13CD"] = result

result = []
for i in range(0,326):
    lad = counties["features"][i]['properties']['LAD13CDO']
    result.append(lad)
map_df["LAD13CDO"] = result

result = []
for i in range(0,326):
    lad = counties["features"][i]['properties']['LAD13NM']
    result.append(lad)
map_df["LAD13NM"] = result

result = []
for i in range(0,326):
    lad = counties["features"][i]['properties']['LAD13NM']
    result.append(lad)
map_df["LAD13NMW"] = result

map_df


# In[4]:


#in this for loop it is checked for every point (lat,long) of an accident 
#in which region it is and puts the name of the region in the id column
for i in range(0,1000):
    point = df_n['geometry'][i]
    for j in range(0,326):
        poly = map_df['geometry'][j]
        if (poly.contains(point)):
            df_n['id'][i] = map_df['LAD13NMW'][j]
            


# In[7]:


#Create figure object taken from https://plotly.com/python/choropleth-maps/ with only changed the colorscale
fig = go.Figure(
    go.Choroplethmapbox(
        geojson = counties, #Assign geojson file
        featureidkey = "properties.LAD13NM", #Assign feature key
        locations = df_n["id"], #Assign location data
        z = [10,20,30,40,50,60,70,80,90], #Assign information data
        zauto = True,
        colorscale = 'teal',
        showscale = True,
    )
)
fig.update_layout(
    mapbox_style = "carto-positron", #Decide a style for the map
    mapbox_zoom = 5, #Zoom in scale
    mapbox_center = {"lat": 53.55, "lon": 2.43}, #Center location of the map
)


# In[ ]:





# In[ ]:





# In[ ]:





# In[ ]:





# In[ ]:





# In[ ]:




